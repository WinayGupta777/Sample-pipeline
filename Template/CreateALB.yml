Parameters:
  myVpcId:
    Type: String
    Description: "Give VPC name."
  mySubAId:
    Type: String
    Description: "Give subnet id."
  mySubBId:
    Type: String
    Description: "Give subnet id."

Resources:
  mySGforALB:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupDescription: Allow all traffic
      GroupName: AllAllow
      VpcId: !Ref myVpcId
      SecurityGroupIngress: 
        - IpProtocol: tcp
          FromPort: 0
          ToPort: 65535
          CidrIp: 0.0.0.0/0

  myALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties: 
      Type: application
      IpAddressType: ipv4
      Scheme: internet-facing
      SecurityGroups: 
        - !Ref mySGforALB
      Subnets: 
        - !Ref mySubAId
        - !Ref mySubBId
      Tags: 
        - Key: Name
          Value: ALB

  myALBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref myALB
      Protocol: HTTP
      Port: 80
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref ALBTargetGroup

  ALBTargetGroup:
    Type: 'AWS::ElasticLoadBalancingV2::TargetGroup'
    Properties:
      Name: MyTargets
      Port: 80
      Protocol: HTTP
      ProtocolVersion: HTTP1
      VpcId: !Ref myVpcId
      TargetType: ip

  mySGforBoxes:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupDescription: Allow http client only
      GroupName: Allow80
      VpcId: !Ref myVpcId
      SecurityGroupIngress: 
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0


Outputs:
  AlbArn:
    Value: !Ref myALB
    Description: Returns ARN of LB.
  ListnerArn:
    Value: !Ref myALBListener
    Description: Returns ARN of Listners.
  TargetGroupArn:
    Value: !Ref ALBTargetGroup
    Description: Returns ARN of TG.
  BoxSgId:
    Value: !Ref mySGforBoxes
    Description: Returns Id of Container SG.